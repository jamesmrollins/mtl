# This is a basic workflow to help you get started with Actions

name: UploadModel

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ Test,Dev ]
    paths:
    - '**.mdl'
  pull_request:
    branches: [master]
    types: [closed]
    paths:
    - '**.mdl'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  getFileNameList:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest #windows-latest #ubuntu-latest
    outputs:
      outputFileName: ${{ steps.getFileName.outputs.fileName }}
      #output2: ${{ steps.step2.outputs.test }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
         fetch-depth: "0"

      - id: changedFiles
        uses: jitterbit/get-changed-files@v1

      - name: '' #get changed files
        id: getFileName
        run: |
          chmod +x .github/workflows/changedFilesFilter.sh
          awk '{ sub("\r$", ""); print }' .github/workflows/changedFilesFilter.sh > .github/workflows/changedFilesFilter2.sh
          mv .github/workflows/changedFilesFilter2.sh .github/workflows/changedFilesFilter.sh
          chmod +x .github/workflows/changedFilesFilter.sh
          echo "::set-output name=fileName::$(.github/workflows/changedFilesFilter.sh "${{ steps.changedFiles.outputs.added_modified }}")"

      - name: File Name List
        run: |
         echo ${{ steps.getFileName.outputs.fileName }}
         
  UploadModel:
    # The type of runner that the job will run on
    runs-on: windows-latest
    needs: getFileNameList

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: "0"
 
    #- name: '' #get changed Dir Name
    #  id: getDirName
     # run: |
     #   echo "::set-output name=dirs::$(dirname ${{ needs.getFileNameList.outputs.outputFileName }})"
        
    - name: '' #get changed Dir Name
      id: getSDMDocFile
      run: |
        echo "::set-output name=SDMDocFile::$(.github/workflows/DevUtility/sdmDocFileCommit.bat "${{ needs.getFileNameList.outputs.outputFileName }}")"
    
    - name: echo output
      run: |
        echo ${{ steps.getSDMDocFile.outputs.SDMDocFile }}
        echo ${{GITHUB_REF##*/}}
        echo ${GITHUB_REF##*/}
        #echo ${{ steps.getDirName.outputs.dirs }}
    
    - name: SDM Doc
      run: '.github\workflows\DevUtility\SDMDocUtility\ConSDM "${{ needs.getFileNameList.outputs.outputFileName }}" "${{ github.workspace }}\"'
    
   
    - name: Commit SDM-Doc File
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add -- ${{ steps.getSDMDocFile.outputs.SDMDocFile }} 
        git commit -m'SMD Doc Commit' -- ${{ steps.getSDMDocFile.outputs.SDMDocFile }} 
        git push
       
    - name: Generating Vensim input file
      if: always()  
      run: |
        echo "SPECIAL>NOINTERACTION" > .github/workflows/DevUtility/vensimInput.cmd 
        .github/workflows/DevUtility/makeVensimInputFile.bat "${{ needs.getFileNameList.outputs.outputFileName }}" ".github/workflows/DevUtility/vensimInput.cmd" "${{ github.workspace }}\"
        echo "MENU>EXIT" >> .github/workflows/DevUtility/vensimInput.cmd
   
     
    - name: Convert .mdl to .VFM
      if: always()  
      run: .github\workflows\DevUtility\VensimUtility\vensim ".github\workflows\DevUtility\vensimInput.cmd"
   
    - name: Run a Deploy script # echo ${GITHUB_REF##*/} this is code for getting dynamic branch name
      if: always()   
      run: '.github\workflows\DevUtility\DeployFilesUtility\deploy "${{ secrets.TEMPDATA }}" "${{ needs.getFileNameList.outputs.outputFileName }}" "Dev"'
    
    
    #- name: Run a one-line script
     # run: | 
      #  git status
      #  type  .github/workflows/DevUtility/vensimInput.cmd    
   
         
         
   
    
  
  
     
  
    
