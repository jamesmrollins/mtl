# This is a basic workflow to help you get started with Actions

name: UploadModel

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [QA]
    paths:
     '**.mdl'
  #pull_request:
    #branches: [QA]
    #types: [closed]
    #paths:
    #- '**.mdl'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  UploadModel:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: "0"
   
    - name: echo output
      run: |
        echo ${GITHUB_REF##*/}
     
    - name: '' #get changed files
      id: getfile
      run: |
        echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} -- '*.mdl' | xargs)"
     
    - name: echo output
      run: |
        echo ${GITHUB_REF##*/}
        echo ${{ steps.getfile.outputs.files }}
     
    - name: '' #get changed Dir Name
      id: getDirName
      run: |
        echo "::set-output name=dirs::$(dirname ${{ steps.getfile.outputs.files }})"
    
    #- name: echo output
      #run: |
        #echo ${{ steps.getfile.outputs.files }}
        #echo ${{ steps.getDirName.outputs.dirs }}
    
    - name: SDM Doc
      run: '.github\workflows\DevUtility\SDMDocUtility\ConSDM "${{ steps.getfile.outputs.files }}" "${{ github.workspace }}\"'
    
   
    - name: Run a one-line script
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add -- ${{ steps.getDirName.outputs.dirs }}
        git commit -m'SMD Doc Commit' -- ${{ steps.getDirName.outputs.dirs }}
        git push
       
    - name: Generating Vensim input file
      if: always()  
      run: |
        echo "SPECIAL>NOINTERACTION" > .github/workflows/DevUtility/vensimInput.cmd 
        .github/workflows/DevUtility/makeVensimInputFile.bat "${{ steps.getfile.outputs.files  }}" ".github/workflows/DevUtility/vensimInput.cmd" "${{ github.workspace }}\"
        echo "MENU>EXIT" >> .github/workflows/DevUtility/vensimInput.cmd
   
     
    - name: Convert .mdl to .VFM
      if: always()  
      run: .github\workflows\DevUtility\VensimUtility\vensim ".github\workflows\DevUtility\vensimInput.cmd"
   
    - name: Run a Deploy script # echo ${GITHUB_REF##*/} "${{ secrets.TEMPDATA }}" this is code for getting dynamic branch name
      if: always()   
      run: '.github\workflows\DevUtility\DeployFilesUtility\deploy "hirenp@waferwire.com" "${{ steps.getfile.outputs.files }}" "Dev"'
    
    
    #- name: Run a one-line script
     # run: | 
      #  git status
      #  type  .github/workflows/DevUtility/vensimInput.cmd     
    
  
  
     
  
    
